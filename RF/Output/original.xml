<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.6.3 on win32)" generated="20200513 19:06:21.139" rpa="false">
<suite id="s1" name="Run Platform Regression" source="C:\Users\kruks\eclipse-workspace\RF\TestSuits\Standaloneregression\run_platform_regression.robot">
<kw name="Open Connection And Login" library="common_keyword" type="setup">
<doc>Connection established to remote machine 135.250.138.217</doc>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Trying to connect ${HostName}</arg>
</arguments>
<msg timestamp="20200513 19:06:21.559" level="INFO">Trying to connect 135.250.138.217</msg>
<status status="PASS" starttime="20200513 19:06:21.559" endtime="20200513 19:06:21.559"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HostName}</arg>
</arguments>
<status status="PASS" starttime="20200513 19:06:21.559" endtime="20200513 19:06:21.560"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${User}</arg>
<arg>${Password}</arg>
</arguments>
<msg timestamp="20200513 19:06:21.560" level="INFO">Logging into '135.250.138.217:22' as 'aorAuto'.</msg>
<msg timestamp="20200513 19:06:23.818" level="INFO">Read output: Last login: Wed May 13 18:55:08 2020 from 10.143.95.244
[aorAuto@pokhran Platform]$</msg>
<msg timestamp="20200513 19:06:23.818" level="INFO">c:\users\kruks\appdata\local\continuum\anaconda3\lib\site-packages\cryptography\hazmat\backends\openssl\ciphers.py:114: UserWarning: implicit cast from 'char *' to a different pointer type: will be forbidden in the future (check that the types are as you expect; use an explicit ffi.cast() if they are correct)
  operation
c:\users\kruks\appdata\local\continuum\anaconda3\lib\site-packages\cryptography\hazmat\backends\openssl\ciphers.py:140: UserWarning: implicit cast from 'char *' to a different pointer type: will be forbidden in the future (check that the types are as you expect; use an explicit ffi.cast() if they are correct)
  self._backend._ffi.from_buffer(data), len(data)</msg>
<status status="PASS" starttime="20200513 19:06:21.560" endtime="20200513 19:06:23.821"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:21.558" endtime="20200513 19:06:23.822"></status>
</kw>
<test id="s1-t1" name="Execute AORREG-32">
<kw name="Run Test Case" library="common_keyword">
<doc>Running platform regression individual test case</doc>
<arguments>
<arg>AORREG-32</arg>
<arg>FAILED:FM:Generic event processing</arg>
<arg>None</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IS_MULTI_TC}'=='None'</arg>
<arg>Concatinate</arg>
<arg>${TC_ID}</arg>
<arg>.py</arg>
<arg>ELSE</arg>
<arg>Concatinate</arg>
<arg>${IS_MULTI_TC}</arg>
<arg>.py</arg>
</arguments>
<assign>
<var>${TC_NAME}</var>
</assign>
<kw name="Concatinate" library="common_keyword">
<doc>Concatination strings using built in keyword and return results</doc>
<arguments>
<arg>${TC_ID}</arg>
<arg>.py</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${STR1}</arg>
<arg>${STR2}</arg>
</arguments>
<assign>
<var>${CATSTR}</var>
</assign>
<msg timestamp="20200513 19:06:23.841" level="INFO">${CATSTR} = AORREG-32.py</msg>
<status status="PASS" starttime="20200513 19:06:23.840" endtime="20200513 19:06:23.842"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:23.838" endtime="20200513 19:06:23.842"></status>
</kw>
<msg timestamp="20200513 19:06:23.842" level="INFO">${TC_NAME} = AORREG-32.py</msg>
<status status="PASS" starttime="20200513 19:06:23.836" endtime="20200513 19:06:23.843"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${Environment}</arg>
<arg>_ENV</arg>
</arguments>
<assign>
<var>${EnvName}</var>
</assign>
<msg timestamp="20200513 19:06:23.844" level="INFO">${EnvName} = RATE4_ENV</msg>
<status status="PASS" starttime="20200513 19:06:23.843" endtime="20200513 19:06:23.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Executing cd ${AutomationPath};python ${TC_NAME}</arg>
</arguments>
<msg timestamp="20200513 19:06:23.845" level="INFO">Executing cd /home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/bin/;python AORREG-32.py</msg>
<status status="PASS" starttime="20200513 19:06:23.845" endtime="20200513 19:06:23.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IS_MULTI_TC}'=='None'</arg>
<arg>Executing Command</arg>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName}</arg>
<arg>ELSE</arg>
<arg>Executing Command</arg>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName} ${TC_ID} ${TC_ID}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Executing Command" library="common_keyword">
<doc>Executing commands in server</doc>
<arguments>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${CMD}</arg>
</arguments>
<assign>
<var>${OUTPUT}</var>
</assign>
<msg timestamp="20200513 19:06:23.850" level="INFO">Executing command 'cd /home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/bin/;python AORREG-32.py RATE4_ENV'.</msg>
<msg timestamp="20200513 19:06:24.138" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20200513 19:06:24.138" level="INFO">${OUTPUT} = [94mExexuting: AORREG-32
[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[20/05/2020 13:19:06] [DEBUG]  ...</msg>
<status status="PASS" starttime="20200513 19:06:23.849" endtime="20200513 19:06:24.138"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:23.847" endtime="20200513 19:06:24.139"></status>
</kw>
<msg timestamp="20200513 19:06:24.139" level="INFO">${RESULT} = [94mExexuting: AORREG-32
[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[20/05/2020 13:19:06] [DEBUG]  ...</msg>
<status status="PASS" starttime="20200513 19:06:23.846" endtime="20200513 19:06:24.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Result of ${TC_ID} is \r\n ${RESULT}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.139" level="WARN">Ignoring space after '\n' is deprecated. For more info see: https://github.com/robotframework/robotframework/issues/3333</msg>
<msg timestamp="20200513 19:06:24.143" level="INFO">Result of AORREG-32 is 
[94mExexuting: AORREG-32
[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 62 ERROR: OperationalError (2003, "Can't connect to MySQL server on '135.250.193.176' (111)")

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 62, in __init__
    db = MySQLdb.connect(host=self.host,user=self.user,passwd=self.password,port=self.port,db=self.table)
  File "/usr/lib64/python2.6/site-packages/MySQLdb/__init__.py", line 81, in Connect
    return Connection(*args, **kwargs)
  File "/usr/lib64/python2.6/site-packages/MySQLdb/connections.py", line 187, in __init__
    super(Connection, self).__init__(*args, **kwargs2)
OperationalError: (2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m Failed to create DB connection(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")[0m
[20/05/2020 13:19:06] [DEBUG] &lt;socket._socketobject object at 0x101ff30&gt;[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 546 ERROR: error [Errno 111] Connection refused

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 546, in __init__
    client.connect((self.host,self.port))
  File "&lt;string&gt;", line 1, in connect
error: [Errno 111] Connection refused
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused
[0m
[91mFailed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 771 ERROR: Exception Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 771, in wrapper
    Test(LOG)
  File "AORREG-32.py", line 41, in AORREG_32
    alarm = CommonLIB.alarm(EA_ip,EA_Port,LOG=LOG)
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 554, in __init__
    raise Exception("Failed to create connection to "+ str(self.host) + " via port " + str(self.port)+str(err))
Exception: Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused
[94mLog file path:
/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/log/AORREG-32_13_05_2020_19_06_22.log[0m
[20/05/2020 13:19:06] [DEBUG] 
TestCase AORREG-32 failed after 0.0148980617523 seconds
[0m
[94mResult file path :
/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/result/AORREG-32.txt
[0m
[91m[20/05/2020 13:19:06] [FAIL]  Wed_May_13_2020_19_06_22:AORREG-32:135.250.193.177:FAILED:FM:Generic event processing

[0m</msg>
<status status="PASS" starttime="20200513 19:06:24.139" endtime="20200513 19:06:24.144"></status>
</kw>
<kw name="Read Until Regexp" library="SSHLibrary">
<doc>Consumes and returns the server output until a match to ``regexp`` is found.</doc>
<arguments>
<arg>*${RESULT_SHOULD_BE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200513 19:06:24.152" level="FAIL">error: nothing to repeat at position 0</msg>
<status status="PASS" starttime="20200513 19:06:24.144" endtime="20200513 19:06:24.152"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:23.834" endtime="20200513 19:06:24.152"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn" type="teardown">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>${LogLevel}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.154" level="INFO">Log level changed from INFO to INFO.</msg>
<status status="PASS" starttime="20200513 19:06:24.153" endtime="20200513 19:06:24.154"></status>
</kw>
<tags>
<tag>EM</tag>
</tags>
<status status="PASS" starttime="20200513 19:06:23.822" endtime="20200513 19:06:24.155" critical="yes">error: nothing to repeat at position 0</status>
</test>
<test id="s1-t2" name="Execute AORREG-27">
<kw name="Run Test Case" library="common_keyword">
<doc>Running platform regression individual test case</doc>
<arguments>
<arg>AORREG-27</arg>
<arg>FAILED:FM:Verify Group_Of_Alarms for MBA_EmFmTm</arg>
<arg>None</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IS_MULTI_TC}'=='None'</arg>
<arg>Concatinate</arg>
<arg>${TC_ID}</arg>
<arg>.py</arg>
<arg>ELSE</arg>
<arg>Concatinate</arg>
<arg>${IS_MULTI_TC}</arg>
<arg>.py</arg>
</arguments>
<assign>
<var>${TC_NAME}</var>
</assign>
<kw name="Concatinate" library="common_keyword">
<doc>Concatination strings using built in keyword and return results</doc>
<arguments>
<arg>${TC_ID}</arg>
<arg>.py</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${STR1}</arg>
<arg>${STR2}</arg>
</arguments>
<assign>
<var>${CATSTR}</var>
</assign>
<msg timestamp="20200513 19:06:24.174" level="INFO">${CATSTR} = AORREG-27.py</msg>
<status status="PASS" starttime="20200513 19:06:24.173" endtime="20200513 19:06:24.174"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:24.170" endtime="20200513 19:06:24.174"></status>
</kw>
<msg timestamp="20200513 19:06:24.174" level="INFO">${TC_NAME} = AORREG-27.py</msg>
<status status="PASS" starttime="20200513 19:06:24.170" endtime="20200513 19:06:24.174"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${Environment}</arg>
<arg>_ENV</arg>
</arguments>
<assign>
<var>${EnvName}</var>
</assign>
<msg timestamp="20200513 19:06:24.175" level="INFO">${EnvName} = RATE4_ENV</msg>
<status status="PASS" starttime="20200513 19:06:24.174" endtime="20200513 19:06:24.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Executing cd ${AutomationPath};python ${TC_NAME}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.176" level="INFO">Executing cd /home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/bin/;python AORREG-27.py</msg>
<status status="PASS" starttime="20200513 19:06:24.176" endtime="20200513 19:06:24.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IS_MULTI_TC}'=='None'</arg>
<arg>Executing Command</arg>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName}</arg>
<arg>ELSE</arg>
<arg>Executing Command</arg>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName} ${TC_ID} ${TC_ID}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Executing Command" library="common_keyword">
<doc>Executing commands in server</doc>
<arguments>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${CMD}</arg>
</arguments>
<assign>
<var>${OUTPUT}</var>
</assign>
<msg timestamp="20200513 19:06:24.178" level="INFO">Executing command 'cd /home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/bin/;python AORREG-27.py RATE4_ENV'.</msg>
<msg timestamp="20200513 19:06:24.548" level="INFO">Command exited with return code 1.</msg>
<msg timestamp="20200513 19:06:24.548" level="INFO">${OUTPUT} = [94mExexuting: AORREG-27
[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[20/05/2020 13:19:06] [DEBUG]  ...</msg>
<status status="PASS" starttime="20200513 19:06:24.177" endtime="20200513 19:06:24.548"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:24.177" endtime="20200513 19:06:24.549"></status>
</kw>
<msg timestamp="20200513 19:06:24.549" level="INFO">${RESULT} = [94mExexuting: AORREG-27
[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[20/05/2020 13:19:06] [DEBUG]  ...</msg>
<status status="PASS" starttime="20200513 19:06:24.176" endtime="20200513 19:06:24.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Result of ${TC_ID} is \r\n ${RESULT}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.549" level="WARN">Ignoring space after '\n' is deprecated. For more info see: https://github.com/robotframework/robotframework/issues/3333</msg>
<msg timestamp="20200513 19:06:24.553" level="INFO">Result of AORREG-27 is 
[94mExexuting: AORREG-27
[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 62 ERROR: OperationalError (2003, "Can't connect to MySQL server on '135.250.193.176' (111)")

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 62, in __init__
    db = MySQLdb.connect(host=self.host,user=self.user,passwd=self.password,port=self.port,db=self.table)
  File "/usr/lib64/python2.6/site-packages/MySQLdb/__init__.py", line 81, in Connect
    return Connection(*args, **kwargs)
  File "/usr/lib64/python2.6/site-packages/MySQLdb/connections.py", line 187, in __init__
    super(Connection, self).__init__(*args, **kwargs2)
OperationalError: (2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m Failed to create DB connection(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")[0m
[20/05/2020 13:19:06] [DEBUG] &lt;socket._socketobject object at 0x2a21fa0&gt;[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 546 ERROR: error [Errno 111] Connection refused

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 546, in __init__
    client.connect((self.host,self.port))
  File "&lt;string&gt;", line 1, in connect
error: [Errno 111] Connection refused
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused
[0m
[91mFailed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 771 ERROR: Exception Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 771, in wrapper
    Test(LOG)
  File "AORREG-27.py", line 50, in AORREG_27
    alarm = CommonLIB.alarm(EA_ip,EA_Port,LOG=LOG)
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 554, in __init__
    raise Exception("Failed to create connection to "+ str(self.host) + " via port " + str(self.port)+str(err))
Exception: Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused
[94mLog file path:
/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/log/AORREG-27_13_05_2020_19_06_22.log[0m
[20/05/2020 13:19:06] [DEBUG] 
TestCase AORREG-27 failed after 0.0148408412933 seconds
[0m
[94mResult file path :
/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/result/AORREG-27.txt
[0m
[91m[20/05/2020 13:19:06] [FAIL]  Wed_May_13_2020_19_06_22:AORREG-27:135.250.193.177:FAILED:FM:Grouping of Alarms

[0m
[93mRolling back the changes made in Testcase[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[91m Failed to create DB connection(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")[0m</msg>
<status status="PASS" starttime="20200513 19:06:24.549" endtime="20200513 19:06:24.554"></status>
</kw>
<kw name="Read Until Regexp" library="SSHLibrary">
<doc>Consumes and returns the server output until a match to ``regexp`` is found.</doc>
<arguments>
<arg>*${RESULT_SHOULD_BE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200513 19:06:24.560" level="FAIL">error: nothing to repeat at position 0</msg>
<status status="PASS" starttime="20200513 19:06:24.554" endtime="20200513 19:06:24.560"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:24.169" endtime="20200513 19:06:24.562"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn" type="teardown">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>${LogLevel}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.564" level="INFO">Log level changed from INFO to INFO.</msg>
<status status="PASS" starttime="20200513 19:06:24.563" endtime="20200513 19:06:24.564"></status>
</kw>
<tags>
<tag>FM</tag>
</tags>
<status status="PASS" starttime="20200513 19:06:24.166" endtime="20200513 19:06:24.564" critical="yes">error: nothing to repeat at position 0</status>
</test>
<test id="s1-t3" name="Execute AORREG-8662">
<kw name="Run Test Case" library="common_keyword">
<doc>Running platform regression individual test case</doc>
<arguments>
<arg>AORREG-8662</arg>
<arg>FAILED:FM:Verify Group_Of_Alarms for PCS_EmFmTm</arg>
<arg>grouping_of_alarms</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IS_MULTI_TC}'=='None'</arg>
<arg>Concatinate</arg>
<arg>${TC_ID}</arg>
<arg>.py</arg>
<arg>ELSE</arg>
<arg>Concatinate</arg>
<arg>${IS_MULTI_TC}</arg>
<arg>.py</arg>
</arguments>
<assign>
<var>${TC_NAME}</var>
</assign>
<kw name="Concatinate" library="common_keyword">
<doc>Concatination strings using built in keyword and return results</doc>
<arguments>
<arg>${IS_MULTI_TC}</arg>
<arg>.py</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${STR1}</arg>
<arg>${STR2}</arg>
</arguments>
<assign>
<var>${CATSTR}</var>
</assign>
<msg timestamp="20200513 19:06:24.579" level="INFO">${CATSTR} = grouping_of_alarms.py</msg>
<status status="PASS" starttime="20200513 19:06:24.578" endtime="20200513 19:06:24.579"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:24.578" endtime="20200513 19:06:24.579"></status>
</kw>
<msg timestamp="20200513 19:06:24.579" level="INFO">${TC_NAME} = grouping_of_alarms.py</msg>
<status status="PASS" starttime="20200513 19:06:24.577" endtime="20200513 19:06:24.579"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${Environment}</arg>
<arg>_ENV</arg>
</arguments>
<assign>
<var>${EnvName}</var>
</assign>
<msg timestamp="20200513 19:06:24.580" level="INFO">${EnvName} = RATE4_ENV</msg>
<status status="PASS" starttime="20200513 19:06:24.579" endtime="20200513 19:06:24.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Executing cd ${AutomationPath};python ${TC_NAME}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.581" level="INFO">Executing cd /home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/bin/;python grouping_of_alarms.py</msg>
<status status="PASS" starttime="20200513 19:06:24.580" endtime="20200513 19:06:24.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${IS_MULTI_TC}'=='None'</arg>
<arg>Executing Command</arg>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName}</arg>
<arg>ELSE</arg>
<arg>Executing Command</arg>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName} ${TC_ID} ${TC_ID}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Executing Command" library="common_keyword">
<doc>Executing commands in server</doc>
<arguments>
<arg>cd ${AutomationPath};python ${TC_NAME} ${EnvName} ${TC_ID} ${TC_ID}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${CMD}</arg>
</arguments>
<assign>
<var>${OUTPUT}</var>
</assign>
<msg timestamp="20200513 19:06:24.583" level="INFO">Executing command 'cd /home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/bin/;python grouping_of_alarms.py RATE4_ENV AORREG-8662 AORREG-8662'.</msg>
<msg timestamp="20200513 19:06:24.945" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20200513 19:06:24.945" level="INFO">${OUTPUT} = [93mSkipping test case: AORREG-8660[0m
[93mSkipping test case: AORREG-27[0m
[93mSkipping test case: AORREG-8658[0m
[94mExexuting: AORREG-8662
[0m
(2003, "Can't connect to MySQL server on '135....</msg>
<status status="PASS" starttime="20200513 19:06:24.582" endtime="20200513 19:06:24.946"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:24.582" endtime="20200513 19:06:24.946"></status>
</kw>
<msg timestamp="20200513 19:06:24.946" level="INFO">${RESULT} = [93mSkipping test case: AORREG-8660[0m
[93mSkipping test case: AORREG-27[0m
[93mSkipping test case: AORREG-8658[0m
[94mExexuting: AORREG-8662
[0m
(2003, "Can't connect to MySQL server on '135....</msg>
<status status="PASS" starttime="20200513 19:06:24.581" endtime="20200513 19:06:24.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Result of ${TC_ID} is \r\n ${RESULT}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.947" level="WARN">Ignoring space after '\n' is deprecated. For more info see: https://github.com/robotframework/robotframework/issues/3333</msg>
<msg timestamp="20200513 19:06:24.953" level="INFO">Result of AORREG-8662 is 
[93mSkipping test case: AORREG-8660[0m
[93mSkipping test case: AORREG-27[0m
[93mSkipping test case: AORREG-8658[0m
[94mExexuting: AORREG-8662
[0m
(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create DB connection
[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 62 ERROR: OperationalError (2003, "Can't connect to MySQL server on '135.250.193.176' (111)")

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 62, in __init__
    db = MySQLdb.connect(host=self.host,user=self.user,passwd=self.password,port=self.port,db=self.table)
  File "/usr/lib64/python2.6/site-packages/MySQLdb/__init__.py", line 81, in Connect
    return Connection(*args, **kwargs)
  File "/usr/lib64/python2.6/site-packages/MySQLdb/connections.py", line 187, in __init__
    super(Connection, self).__init__(*args, **kwargs2)
OperationalError: (2003, "Can't connect to MySQL server on '135.250.193.176' (111)")
[91m Failed to create DB connection(2003, "Can't connect to MySQL server on '135.250.193.176' (111)")[0m
[20/05/2020 13:19:06] [DEBUG] &lt;socket._socketobject object at 0x17c26e0&gt;[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 546 ERROR: error [Errno 111] Connection refused

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 546, in __init__
    client.connect((self.host,self.port))
  File "&lt;string&gt;", line 1, in connect
error: [Errno 111] Connection refused
[91m[20/05/2020 13:19:06] [FAIL]  Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused
[0m
[91mFailed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused[0m
[20/05/2020 13:19:06] [DEBUG]  Seems to be Error on line 771 ERROR: Exception Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused

Traceback (most recent call last):
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 771, in wrapper
    Test(LOG)
  File "grouping_of_alarms.py", line 54, in verify_Group_Of_Alarms
    netcool 	= CommonLIB.alarm(eaIP,int(TADetails[techArea]),LOG)
  File "/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/lib/CommonLIB.py", line 554, in __init__
    raise Exception("Failed to create connection to "+ str(self.host) + " via port " + str(self.port)+str(err))
Exception: Failed to create connection to 135.250.193.177 via port 9786[Errno 111] Connection refused
[94mLog file path:
/home/aorAuto/Automation/AOR/Platform/Regression/Python_Reg_suite/log/AORREG-8662_13_05_2020_19_06_22.log[0m
[20/05/2020 13:19:06] [DEBUG] 
TestCase AORREG-8662 failed after 0.0154950618744 seconds
[0m
[94mResult file path :
AORREG-8662
[0m
[91m[20/05/2020 13:19:06] [FAIL]  Wed_May_13_2020_19_06_22:AORREG-8662:135.250.193.176:FAILED:FM:Verify Group_Of_Alarms for PCS_EmFmTm

[0m
[93mSkipping test case: AORREG-8663[0m
[93mSkipping test case: AORREG-8659[0m
[93mSkipping test case: AORREG-8661[0m</msg>
<status status="PASS" starttime="20200513 19:06:24.947" endtime="20200513 19:06:24.954"></status>
</kw>
<kw name="Read Until Regexp" library="SSHLibrary">
<doc>Consumes and returns the server output until a match to ``regexp`` is found.</doc>
<arguments>
<arg>*${RESULT_SHOULD_BE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200513 19:06:24.963" level="FAIL">error: nothing to repeat at position 0</msg>
<status status="PASS" starttime="20200513 19:06:24.955" endtime="20200513 19:06:24.963"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:24.577" endtime="20200513 19:06:24.963"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn" type="teardown">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>${LogLevel}</arg>
</arguments>
<msg timestamp="20200513 19:06:24.965" level="INFO">Log level changed from INFO to INFO.</msg>
<status status="PASS" starttime="20200513 19:06:24.964" endtime="20200513 19:06:24.965"></status>
</kw>
<tags>
<tag>TM</tag>
</tags>
<status status="PASS" starttime="20200513 19:06:24.574" endtime="20200513 19:06:24.966" critical="yes">error: nothing to repeat at position 0</status>
</test>
<kw name="Closing Connection" library="common_keyword" type="teardown">
<doc>Closing all opened connection</doc>
<kw name="Close Connection" library="SSHLibrary">
<doc>Closes the current connection.</doc>
<status status="PASS" starttime="20200513 19:06:24.979" endtime="20200513 19:06:24.980"></status>
</kw>
<status status="PASS" starttime="20200513 19:06:24.978" endtime="20200513 19:06:24.981"></status>
</kw>
<doc>Wrapper for Platform regression</doc>
<status status="PASS" starttime="20200513 19:06:21.144" endtime="20200513 19:06:24.981"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="3">Critical Tests</stat>
<stat pass="0" fail="3">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1">EM</stat>
<stat pass="0" fail="1">FM</stat>
<stat pass="0" fail="1">TM</stat>
</tag>
<suite>
<stat pass="0" fail="3" id="s1" name="Run Platform Regression">Run Platform Regression</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200513 19:06:24.139" level="WARN">Ignoring space after '\n' is deprecated. For more info see: https://github.com/robotframework/robotframework/issues/3333</msg>
<msg timestamp="20200513 19:06:24.549" level="WARN">Ignoring space after '\n' is deprecated. For more info see: https://github.com/robotframework/robotframework/issues/3333</msg>
<msg timestamp="20200513 19:06:24.947" level="WARN">Ignoring space after '\n' is deprecated. For more info see: https://github.com/robotframework/robotframework/issues/3333</msg>
</errors>
</robot>
